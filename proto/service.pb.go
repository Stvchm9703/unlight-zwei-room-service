// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.4
// source: service.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xfd, 0x04, 0x0a, 0x0b, 0x52, 0x6f, 0x6f, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e,
	0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0x00, 0x12,
	0x3a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17,
	0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0x00, 0x30, 0x01, 0x12, 0x32, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x11, 0x2e, 0x55, 0x4c, 0x5a,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e,
	0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0x00, 0x12,
	0x37, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x2e,
	0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x11, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x55, 0x4c, 0x5a,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0f, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x55,
	0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x1a,
	0x11, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4d,
	0x73, 0x67, 0x22, 0x00, 0x30, 0x01, 0x12, 0x33, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x11, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x73, 0x67, 0x1a, 0x0f, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x08, 0x51,
	0x75, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x11, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x55, 0x4c, 0x5a,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x36, 0x0a,
	0x09, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x50, 0x61, 0x69, 0x72, 0x12, 0x17, 0x2e, 0x55, 0x4c, 0x5a,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f,
	0x6d, 0x12, 0x11, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x22, 0x00, 0x42, 0x1d, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0xaa, 0x02, 0x11, 0x55, 0x4c, 0x5a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_service_proto_goTypes = []interface{}{
	(*RoomCreateReq)(nil),     // 0: ULZProto.RoomCreateReq
	(*RoomReq)(nil),           // 1: ULZProto.RoomReq
	(*RoomUpdateCardReq)(nil), // 2: ULZProto.RoomUpdateCardReq
	(*RoomMsg)(nil),           // 3: ULZProto.RoomMsg
	(*Room)(nil),              // 4: ULZProto.Room
	(*Empty)(nil),             // 5: ULZProto.Empty
	(*RoomBroadcastInfo)(nil), // 6: ULZProto.RoomBroadcastInfo
}
var file_service_proto_depIdxs = []int32{
	0,  // 0: ULZProto.RoomService.CreateRoom:input_type -> ULZProto.RoomCreateReq
	0,  // 1: ULZProto.RoomService.GetRoomList:input_type -> ULZProto.RoomCreateReq
	1,  // 2: ULZProto.RoomService.GetRoomInfo:input_type -> ULZProto.RoomReq
	0,  // 3: ULZProto.RoomService.UpdateRoom:input_type -> ULZProto.RoomCreateReq
	2,  // 4: ULZProto.RoomService.UpdateCard:input_type -> ULZProto.RoomUpdateCardReq
	1,  // 5: ULZProto.RoomService.BroadcastInfo:input_type -> ULZProto.RoomReq
	1,  // 6: ULZProto.RoomService.ServerBroadcast:input_type -> ULZProto.RoomReq
	3,  // 7: ULZProto.RoomService.SendMessage:input_type -> ULZProto.RoomMsg
	1,  // 8: ULZProto.RoomService.QuitRoom:input_type -> ULZProto.RoomReq
	0,  // 9: ULZProto.RoomService.QuickPair:input_type -> ULZProto.RoomCreateReq
	1,  // 10: ULZProto.RoomService.JoinRoom:input_type -> ULZProto.RoomReq
	4,  // 11: ULZProto.RoomService.CreateRoom:output_type -> ULZProto.Room
	4,  // 12: ULZProto.RoomService.GetRoomList:output_type -> ULZProto.Room
	4,  // 13: ULZProto.RoomService.GetRoomInfo:output_type -> ULZProto.Room
	4,  // 14: ULZProto.RoomService.UpdateRoom:output_type -> ULZProto.Room
	5,  // 15: ULZProto.RoomService.UpdateCard:output_type -> ULZProto.Empty
	6,  // 16: ULZProto.RoomService.BroadcastInfo:output_type -> ULZProto.RoomBroadcastInfo
	3,  // 17: ULZProto.RoomService.ServerBroadcast:output_type -> ULZProto.RoomMsg
	5,  // 18: ULZProto.RoomService.SendMessage:output_type -> ULZProto.Empty
	5,  // 19: ULZProto.RoomService.QuitRoom:output_type -> ULZProto.Empty
	4,  // 20: ULZProto.RoomService.QuickPair:output_type -> ULZProto.Room
	4,  // 21: ULZProto.RoomService.JoinRoom:output_type -> ULZProto.Room
	11, // [11:22] is the sub-list for method output_type
	0,  // [0:11] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	file_message_proto_init()
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RoomServiceClient is the client API for RoomService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoomServiceClient interface {
	CreateRoom(ctx context.Context, in *RoomCreateReq, opts ...grpc.CallOption) (*Room, error)
	GetRoomList(ctx context.Context, in *RoomCreateReq, opts ...grpc.CallOption) (RoomService_GetRoomListClient, error)
	GetRoomInfo(ctx context.Context, in *RoomReq, opts ...grpc.CallOption) (*Room, error)
	UpdateRoom(ctx context.Context, in *RoomCreateReq, opts ...grpc.CallOption) (*Room, error)
	UpdateCard(ctx context.Context, in *RoomUpdateCardReq, opts ...grpc.CallOption) (*Empty, error)
	BroadcastInfo(ctx context.Context, in *RoomReq, opts ...grpc.CallOption) (*RoomBroadcastInfo, error)
	ServerBroadcast(ctx context.Context, in *RoomReq, opts ...grpc.CallOption) (RoomService_ServerBroadcastClient, error)
	SendMessage(ctx context.Context, in *RoomMsg, opts ...grpc.CallOption) (*Empty, error)
	QuitRoom(ctx context.Context, in *RoomReq, opts ...grpc.CallOption) (*Empty, error)
	QuickPair(ctx context.Context, in *RoomCreateReq, opts ...grpc.CallOption) (*Room, error)
	JoinRoom(ctx context.Context, in *RoomReq, opts ...grpc.CallOption) (*Room, error)
}

type roomServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRoomServiceClient(cc grpc.ClientConnInterface) RoomServiceClient {
	return &roomServiceClient{cc}
}

func (c *roomServiceClient) CreateRoom(ctx context.Context, in *RoomCreateReq, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := c.cc.Invoke(ctx, "/ULZProto.RoomService/CreateRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) GetRoomList(ctx context.Context, in *RoomCreateReq, opts ...grpc.CallOption) (RoomService_GetRoomListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RoomService_serviceDesc.Streams[0], "/ULZProto.RoomService/GetRoomList", opts...)
	if err != nil {
		return nil, err
	}
	x := &roomServiceGetRoomListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RoomService_GetRoomListClient interface {
	Recv() (*Room, error)
	grpc.ClientStream
}

type roomServiceGetRoomListClient struct {
	grpc.ClientStream
}

func (x *roomServiceGetRoomListClient) Recv() (*Room, error) {
	m := new(Room)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *roomServiceClient) GetRoomInfo(ctx context.Context, in *RoomReq, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := c.cc.Invoke(ctx, "/ULZProto.RoomService/GetRoomInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) UpdateRoom(ctx context.Context, in *RoomCreateReq, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := c.cc.Invoke(ctx, "/ULZProto.RoomService/UpdateRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) UpdateCard(ctx context.Context, in *RoomUpdateCardReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/ULZProto.RoomService/UpdateCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) BroadcastInfo(ctx context.Context, in *RoomReq, opts ...grpc.CallOption) (*RoomBroadcastInfo, error) {
	out := new(RoomBroadcastInfo)
	err := c.cc.Invoke(ctx, "/ULZProto.RoomService/BroadcastInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) ServerBroadcast(ctx context.Context, in *RoomReq, opts ...grpc.CallOption) (RoomService_ServerBroadcastClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RoomService_serviceDesc.Streams[1], "/ULZProto.RoomService/ServerBroadcast", opts...)
	if err != nil {
		return nil, err
	}
	x := &roomServiceServerBroadcastClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RoomService_ServerBroadcastClient interface {
	Recv() (*RoomMsg, error)
	grpc.ClientStream
}

type roomServiceServerBroadcastClient struct {
	grpc.ClientStream
}

func (x *roomServiceServerBroadcastClient) Recv() (*RoomMsg, error) {
	m := new(RoomMsg)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *roomServiceClient) SendMessage(ctx context.Context, in *RoomMsg, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/ULZProto.RoomService/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) QuitRoom(ctx context.Context, in *RoomReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/ULZProto.RoomService/QuitRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) QuickPair(ctx context.Context, in *RoomCreateReq, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := c.cc.Invoke(ctx, "/ULZProto.RoomService/QuickPair", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) JoinRoom(ctx context.Context, in *RoomReq, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := c.cc.Invoke(ctx, "/ULZProto.RoomService/JoinRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoomServiceServer is the server API for RoomService service.
type RoomServiceServer interface {
	CreateRoom(context.Context, *RoomCreateReq) (*Room, error)
	GetRoomList(*RoomCreateReq, RoomService_GetRoomListServer) error
	GetRoomInfo(context.Context, *RoomReq) (*Room, error)
	UpdateRoom(context.Context, *RoomCreateReq) (*Room, error)
	UpdateCard(context.Context, *RoomUpdateCardReq) (*Empty, error)
	BroadcastInfo(context.Context, *RoomReq) (*RoomBroadcastInfo, error)
	ServerBroadcast(*RoomReq, RoomService_ServerBroadcastServer) error
	SendMessage(context.Context, *RoomMsg) (*Empty, error)
	QuitRoom(context.Context, *RoomReq) (*Empty, error)
	QuickPair(context.Context, *RoomCreateReq) (*Room, error)
	JoinRoom(context.Context, *RoomReq) (*Room, error)
}

// UnimplementedRoomServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRoomServiceServer struct {
}

func (*UnimplementedRoomServiceServer) CreateRoom(context.Context, *RoomCreateReq) (*Room, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRoom not implemented")
}
func (*UnimplementedRoomServiceServer) GetRoomList(*RoomCreateReq, RoomService_GetRoomListServer) error {
	return status.Errorf(codes.Unimplemented, "method GetRoomList not implemented")
}
func (*UnimplementedRoomServiceServer) GetRoomInfo(context.Context, *RoomReq) (*Room, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoomInfo not implemented")
}
func (*UnimplementedRoomServiceServer) UpdateRoom(context.Context, *RoomCreateReq) (*Room, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRoom not implemented")
}
func (*UnimplementedRoomServiceServer) UpdateCard(context.Context, *RoomUpdateCardReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCard not implemented")
}
func (*UnimplementedRoomServiceServer) BroadcastInfo(context.Context, *RoomReq) (*RoomBroadcastInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BroadcastInfo not implemented")
}
func (*UnimplementedRoomServiceServer) ServerBroadcast(*RoomReq, RoomService_ServerBroadcastServer) error {
	return status.Errorf(codes.Unimplemented, "method ServerBroadcast not implemented")
}
func (*UnimplementedRoomServiceServer) SendMessage(context.Context, *RoomMsg) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}
func (*UnimplementedRoomServiceServer) QuitRoom(context.Context, *RoomReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QuitRoom not implemented")
}
func (*UnimplementedRoomServiceServer) QuickPair(context.Context, *RoomCreateReq) (*Room, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QuickPair not implemented")
}
func (*UnimplementedRoomServiceServer) JoinRoom(context.Context, *RoomReq) (*Room, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinRoom not implemented")
}

func RegisterRoomServiceServer(s *grpc.Server, srv RoomServiceServer) {
	s.RegisterService(&_RoomService_serviceDesc, srv)
}

func _RoomService_CreateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).CreateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ULZProto.RoomService/CreateRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).CreateRoom(ctx, req.(*RoomCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_GetRoomList_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RoomCreateReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RoomServiceServer).GetRoomList(m, &roomServiceGetRoomListServer{stream})
}

type RoomService_GetRoomListServer interface {
	Send(*Room) error
	grpc.ServerStream
}

type roomServiceGetRoomListServer struct {
	grpc.ServerStream
}

func (x *roomServiceGetRoomListServer) Send(m *Room) error {
	return x.ServerStream.SendMsg(m)
}

func _RoomService_GetRoomInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).GetRoomInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ULZProto.RoomService/GetRoomInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).GetRoomInfo(ctx, req.(*RoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_UpdateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).UpdateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ULZProto.RoomService/UpdateRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).UpdateRoom(ctx, req.(*RoomCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_UpdateCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomUpdateCardReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).UpdateCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ULZProto.RoomService/UpdateCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).UpdateCard(ctx, req.(*RoomUpdateCardReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_BroadcastInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).BroadcastInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ULZProto.RoomService/BroadcastInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).BroadcastInfo(ctx, req.(*RoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_ServerBroadcast_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RoomReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RoomServiceServer).ServerBroadcast(m, &roomServiceServerBroadcastServer{stream})
}

type RoomService_ServerBroadcastServer interface {
	Send(*RoomMsg) error
	grpc.ServerStream
}

type roomServiceServerBroadcastServer struct {
	grpc.ServerStream
}

func (x *roomServiceServerBroadcastServer) Send(m *RoomMsg) error {
	return x.ServerStream.SendMsg(m)
}

func _RoomService_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ULZProto.RoomService/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).SendMessage(ctx, req.(*RoomMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_QuitRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).QuitRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ULZProto.RoomService/QuitRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).QuitRoom(ctx, req.(*RoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_QuickPair_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).QuickPair(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ULZProto.RoomService/QuickPair",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).QuickPair(ctx, req.(*RoomCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_JoinRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).JoinRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ULZProto.RoomService/JoinRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).JoinRoom(ctx, req.(*RoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoomService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ULZProto.RoomService",
	HandlerType: (*RoomServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRoom",
			Handler:    _RoomService_CreateRoom_Handler,
		},
		{
			MethodName: "GetRoomInfo",
			Handler:    _RoomService_GetRoomInfo_Handler,
		},
		{
			MethodName: "UpdateRoom",
			Handler:    _RoomService_UpdateRoom_Handler,
		},
		{
			MethodName: "UpdateCard",
			Handler:    _RoomService_UpdateCard_Handler,
		},
		{
			MethodName: "BroadcastInfo",
			Handler:    _RoomService_BroadcastInfo_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _RoomService_SendMessage_Handler,
		},
		{
			MethodName: "QuitRoom",
			Handler:    _RoomService_QuitRoom_Handler,
		},
		{
			MethodName: "QuickPair",
			Handler:    _RoomService_QuickPair_Handler,
		},
		{
			MethodName: "JoinRoom",
			Handler:    _RoomService_JoinRoom_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetRoomList",
			Handler:       _RoomService_GetRoomList_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ServerBroadcast",
			Handler:       _RoomService_ServerBroadcast_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "service.proto",
}
