// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: message.proto

package proto

import (
	fmt "fmt"
	math "math"
	proto "github.com/gogo/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *RmCharCardInfo) Validate() error {
	return nil
}
func (this *RmUserInfo) Validate() error {
	return nil
}
func (this *Room) Validate() error {
	if this.Host != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Host); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Host", err)
		}
	}
	if this.Dueler != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Dueler); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Dueler", err)
		}
	}
	if this.CharCardLimitMax != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CharCardLimitMax); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CharCardLimitMax", err)
		}
	}
	if this.CharCardLimitMin != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CharCardLimitMin); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CharCardLimitMin", err)
		}
	}
	return nil
}
func (this *RoomSH) Validate() error {
	return nil
}
func (this *RoomMsg) Validate() error {
	return nil
}
func (this *RoomReq) Validate() error {
	if this.User != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.User); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("User", err)
		}
	}
	return nil
}
func (this *RoomCreateReq) Validate() error {
	if this.Host != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Host); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Host", err)
		}
	}
	if this.CharCardLimitMax != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CharCardLimitMax); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CharCardLimitMax", err)
		}
	}
	if this.CharCardLimitMin != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CharCardLimitMin); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CharCardLimitMin", err)
		}
	}
	return nil
}
func (this *RoomResp) Validate() error {
	if this.Result != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Result); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Result", err)
		}
	}
	if this.ErrorMsg != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ErrorMsg); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ErrorMsg", err)
		}
	}
	return nil
}
func (this *RoomListResp) Validate() error {
	for _, item := range this.Result {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Result", err)
			}
		}
	}
	if this.ErrorMsg != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ErrorMsg); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ErrorMsg", err)
		}
	}
	return nil
}
