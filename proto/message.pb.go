// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.4
// source: message.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RoomStatus int32

const (
	RoomStatus_ON_INIT    RoomStatus = 0
	RoomStatus_ON_WAIT    RoomStatus = 1
	RoomStatus_ON_START   RoomStatus = 2
	RoomStatus_ON_END     RoomStatus = 3
	RoomStatus_ON_DESTROY RoomStatus = 4
)

// Enum value maps for RoomStatus.
var (
	RoomStatus_name = map[int32]string{
		0: "ON_INIT",
		1: "ON_WAIT",
		2: "ON_START",
		3: "ON_END",
		4: "ON_DESTROY",
	}
	RoomStatus_value = map[string]int32{
		"ON_INIT":    0,
		"ON_WAIT":    1,
		"ON_START":   2,
		"ON_END":     3,
		"ON_DESTROY": 4,
	}
)

func (x RoomStatus) Enum() *RoomStatus {
	p := new(RoomStatus)
	*p = x
	return p
}

func (x RoomStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[0].Descriptor()
}

func (RoomStatus) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[0]
}

func (x RoomStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomStatus.Descriptor instead.
func (RoomStatus) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

type RoomMsg_MsgType int32

const (
	RoomMsg_USER_TEXT     RoomMsg_MsgType = 0
	RoomMsg_USER_STRICKER RoomMsg_MsgType = 1
	RoomMsg_SYSTEM_INFO   RoomMsg_MsgType = 2
	RoomMsg_SYSTEM_WARN   RoomMsg_MsgType = 3
	RoomMsg_SYSTEM_ERR    RoomMsg_MsgType = 4
)

// Enum value maps for RoomMsg_MsgType.
var (
	RoomMsg_MsgType_name = map[int32]string{
		0: "USER_TEXT",
		1: "USER_STRICKER",
		2: "SYSTEM_INFO",
		3: "SYSTEM_WARN",
		4: "SYSTEM_ERR",
	}
	RoomMsg_MsgType_value = map[string]int32{
		"USER_TEXT":     0,
		"USER_STRICKER": 1,
		"SYSTEM_INFO":   2,
		"SYSTEM_WARN":   3,
		"SYSTEM_ERR":    4,
	}
)

func (x RoomMsg_MsgType) Enum() *RoomMsg_MsgType {
	p := new(RoomMsg_MsgType)
	*p = x
	return p
}

func (x RoomMsg_MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomMsg_MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[1].Descriptor()
}

func (RoomMsg_MsgType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[1]
}

func (x RoomMsg_MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomMsg_MsgType.Descriptor instead.
func (RoomMsg_MsgType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3, 0}
}

type RoomUpdateCardReq_PlayerSide int32

const (
	RoomUpdateCardReq_HOST   RoomUpdateCardReq_PlayerSide = 0
	RoomUpdateCardReq_DUELER RoomUpdateCardReq_PlayerSide = 1
)

// Enum value maps for RoomUpdateCardReq_PlayerSide.
var (
	RoomUpdateCardReq_PlayerSide_name = map[int32]string{
		0: "HOST",
		1: "DUELER",
	}
	RoomUpdateCardReq_PlayerSide_value = map[string]int32{
		"HOST":   0,
		"DUELER": 1,
	}
)

func (x RoomUpdateCardReq_PlayerSide) Enum() *RoomUpdateCardReq_PlayerSide {
	p := new(RoomUpdateCardReq_PlayerSide)
	*p = x
	return p
}

func (x RoomUpdateCardReq_PlayerSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomUpdateCardReq_PlayerSide) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[2].Descriptor()
}

func (RoomUpdateCardReq_PlayerSide) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[2]
}

func (x RoomUpdateCardReq_PlayerSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomUpdateCardReq_PlayerSide.Descriptor instead.
func (RoomUpdateCardReq_PlayerSide) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7, 0}
}

// RmCharCardInfo
//      Basic Character Card Infomation
type RmCharCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardId int32 `protobuf:"varint,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	Level  int32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	Rare   int32 `protobuf:"varint,3,opt,name=rare,proto3" json:"rare,omitempty"`
	Cost   int32 `protobuf:"varint,4,opt,name=cost,proto3" json:"cost,omitempty"`
}

func (x *RmCharCardInfo) Reset() {
	*x = RmCharCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmCharCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmCharCardInfo) ProtoMessage() {}

func (x *RmCharCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmCharCardInfo.ProtoReflect.Descriptor instead.
func (*RmCharCardInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *RmCharCardInfo) GetCardId() int32 {
	if x != nil {
		return x.CardId
	}
	return 0
}

func (x *RmCharCardInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *RmCharCardInfo) GetRare() int32 {
	if x != nil {
		return x.Rare
	}
	return 0
}

func (x *RmCharCardInfo) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

//*
//RmUserInfo :
//User basic Information for room info displaying
type RmUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Level    int32  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	AvatIcon string `protobuf:"bytes,4,opt,name=avat_icon,json=avatIcon,proto3" json:"avat_icon,omitempty"`
	Title    string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Rank     int32  `protobuf:"varint,6,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *RmUserInfo) Reset() {
	*x = RmUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmUserInfo) ProtoMessage() {}

func (x *RmUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmUserInfo.ProtoReflect.Descriptor instead.
func (*RmUserInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *RmUserInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RmUserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RmUserInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *RmUserInfo) GetAvatIcon() string {
	if x != nil {
		return x.AvatIcon
	}
	return ""
}

func (x *RmUserInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RmUserInfo) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

//*
//Room :
//Room Detail Information
type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Room-id the id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Room-Key the id
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Room Password
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	// User-info for room-host player
	Host *RmUserInfo `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	// User-info for dueler-player
	Dueler *RmUserInfo `protobuf:"bytes,5,opt,name=dueler,proto3" json:"dueler,omitempty"`
	// Rooms Status
	Status RoomStatus `protobuf:"varint,7,opt,name=status,proto3,enum=ULZProto.RoomStatus" json:"status,omitempty"`
	// Turns number of Game Duel
	Turns int32 `protobuf:"varint,8,opt,name=turns,proto3" json:"turns,omitempty"`
	// Limitation for total Card-Deck
	CostLimitMax int32 `protobuf:"varint,9,opt,name=cost_limit_max,json=costLimitMax,proto3" json:"cost_limit_max,omitempty"`
	CostLimitMin int32 `protobuf:"varint,10,opt,name=cost_limit_min,json=costLimitMin,proto3" json:"cost_limit_min,omitempty"`
	// Limitation for Charecter Card Cost
	CharCardLimitMax *RmCharCardInfo `protobuf:"bytes,11,opt,name=char_card_limit_max,json=charCardLimitMax,proto3" json:"char_card_limit_max,omitempty"`
	CharCardLimitMin *RmCharCardInfo `protobuf:"bytes,12,opt,name=char_card_limit_min,json=charCardLimitMin,proto3" json:"char_card_limit_min,omitempty"`
	// 1vs1 or 3vs3
	CharCardNvn int32 `protobuf:"varint,13,opt,name=char_card_nvn,json=charCardNvn,proto3" json:"char_card_nvn,omitempty"`
	// host-inst
	HostCharcardId int32 `protobuf:"varint,14,opt,name=host_charcard_id,json=hostCharcardId,proto3" json:"host_charcard_id,omitempty"`
	HostCardsetId  int32 `protobuf:"varint,15,opt,name=host_cardset_id,json=hostCardsetId,proto3" json:"host_cardset_id,omitempty"`
	HostCardlevel  int32 `protobuf:"varint,16,opt,name=host_cardlevel,json=hostCardlevel,proto3" json:"host_cardlevel,omitempty"`
	// duel-inst
	DuelCharcardId int32 `protobuf:"varint,17,opt,name=duel_charcard_id,json=duelCharcardId,proto3" json:"duel_charcard_id,omitempty"`
	DuelCardsetId  int32 `protobuf:"varint,18,opt,name=duel_cardset_id,json=duelCardsetId,proto3" json:"duel_cardset_id,omitempty"`
	DuelCardlevel  int32 `protobuf:"varint,19,opt,name=duel_cardlevel,json=duelCardlevel,proto3" json:"duel_cardlevel,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *Room) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Room) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Room) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Room) GetHost() *RmUserInfo {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *Room) GetDueler() *RmUserInfo {
	if x != nil {
		return x.Dueler
	}
	return nil
}

func (x *Room) GetStatus() RoomStatus {
	if x != nil {
		return x.Status
	}
	return RoomStatus_ON_INIT
}

func (x *Room) GetTurns() int32 {
	if x != nil {
		return x.Turns
	}
	return 0
}

func (x *Room) GetCostLimitMax() int32 {
	if x != nil {
		return x.CostLimitMax
	}
	return 0
}

func (x *Room) GetCostLimitMin() int32 {
	if x != nil {
		return x.CostLimitMin
	}
	return 0
}

func (x *Room) GetCharCardLimitMax() *RmCharCardInfo {
	if x != nil {
		return x.CharCardLimitMax
	}
	return nil
}

func (x *Room) GetCharCardLimitMin() *RmCharCardInfo {
	if x != nil {
		return x.CharCardLimitMin
	}
	return nil
}

func (x *Room) GetCharCardNvn() int32 {
	if x != nil {
		return x.CharCardNvn
	}
	return 0
}

func (x *Room) GetHostCharcardId() int32 {
	if x != nil {
		return x.HostCharcardId
	}
	return 0
}

func (x *Room) GetHostCardsetId() int32 {
	if x != nil {
		return x.HostCardsetId
	}
	return 0
}

func (x *Room) GetHostCardlevel() int32 {
	if x != nil {
		return x.HostCardlevel
	}
	return 0
}

func (x *Room) GetDuelCharcardId() int32 {
	if x != nil {
		return x.DuelCharcardId
	}
	return 0
}

func (x *Room) GetDuelCardsetId() int32 {
	if x != nil {
		return x.DuelCardsetId
	}
	return 0
}

func (x *Room) GetDuelCardlevel() int32 {
	if x != nil {
		return x.DuelCardlevel
	}
	return 0
}

//*
//RmMsg :
//to pass the user message / stricker
type RoomMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FromId  string          `protobuf:"bytes,2,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	FmName  string          `protobuf:"bytes,3,opt,name=fm_name,json=fmName,proto3" json:"fm_name,omitempty"`
	ToId    string          `protobuf:"bytes,4,opt,name=to_id,json=toId,proto3" json:"to_id,omitempty"`
	ToName  string          `protobuf:"bytes,5,opt,name=to_name,json=toName,proto3" json:"to_name,omitempty"`
	Message string          `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	MsgType RoomMsg_MsgType `protobuf:"varint,7,opt,name=msg_type,json=msgType,proto3,enum=ULZProto.RoomMsg_MsgType" json:"msg_type,omitempty"`
}

func (x *RoomMsg) Reset() {
	*x = RoomMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomMsg) ProtoMessage() {}

func (x *RoomMsg) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomMsg.ProtoReflect.Descriptor instead.
func (*RoomMsg) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

func (x *RoomMsg) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RoomMsg) GetFromId() string {
	if x != nil {
		return x.FromId
	}
	return ""
}

func (x *RoomMsg) GetFmName() string {
	if x != nil {
		return x.FmName
	}
	return ""
}

func (x *RoomMsg) GetToId() string {
	if x != nil {
		return x.ToId
	}
	return ""
}

func (x *RoomMsg) GetToName() string {
	if x != nil {
		return x.ToName
	}
	return ""
}

func (x *RoomMsg) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RoomMsg) GetMsgType() RoomMsg_MsgType {
	if x != nil {
		return x.MsgType
	}
	return RoomMsg_USER_TEXT
}

type RoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string      `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	User     *RmUserInfo `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	IsDuel   bool        `protobuf:"varint,3,opt,name=is_duel,json=isDuel,proto3" json:"is_duel,omitempty"`
	Password string      `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *RoomReq) Reset() {
	*x = RoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomReq) ProtoMessage() {}

func (x *RoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomReq.ProtoReflect.Descriptor instead.
func (*RoomReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4}
}

func (x *RoomReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RoomReq) GetUser() *RmUserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RoomReq) GetIsDuel() bool {
	if x != nil {
		return x.IsDuel
	}
	return false
}

func (x *RoomReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RoomCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key          string      `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Host         *RmUserInfo `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Password     string      `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	CostLimitMax int32       `protobuf:"varint,4,opt,name=cost_limit_max,json=costLimitMax,proto3" json:"cost_limit_max,omitempty"`
	CostLimitMin int32       `protobuf:"varint,5,opt,name=cost_limit_min,json=costLimitMin,proto3" json:"cost_limit_min,omitempty"`
	// 1vs1 or 3vs3
	CharCardNvn int32 `protobuf:"varint,6,opt,name=char_card_nvn,json=charCardNvn,proto3" json:"char_card_nvn,omitempty"`
	// Limitation for Charecter Card Cost
	CharCardLimitMax *RmCharCardInfo `protobuf:"bytes,7,opt,name=char_card_limit_max,json=charCardLimitMax,proto3" json:"char_card_limit_max,omitempty"`
	CharCardLimitMin *RmCharCardInfo `protobuf:"bytes,8,opt,name=char_card_limit_min,json=charCardLimitMin,proto3" json:"char_card_limit_min,omitempty"`
}

func (x *RoomCreateReq) Reset() {
	*x = RoomCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomCreateReq) ProtoMessage() {}

func (x *RoomCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomCreateReq.ProtoReflect.Descriptor instead.
func (*RoomCreateReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{5}
}

func (x *RoomCreateReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RoomCreateReq) GetHost() *RmUserInfo {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *RoomCreateReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RoomCreateReq) GetCostLimitMax() int32 {
	if x != nil {
		return x.CostLimitMax
	}
	return 0
}

func (x *RoomCreateReq) GetCostLimitMin() int32 {
	if x != nil {
		return x.CostLimitMin
	}
	return 0
}

func (x *RoomCreateReq) GetCharCardNvn() int32 {
	if x != nil {
		return x.CharCardNvn
	}
	return 0
}

func (x *RoomCreateReq) GetCharCardLimitMax() *RmCharCardInfo {
	if x != nil {
		return x.CharCardLimitMax
	}
	return nil
}

func (x *RoomCreateReq) GetCharCardLimitMin() *RmCharCardInfo {
	if x != nil {
		return x.CharCardLimitMin
	}
	return nil
}

type RoomBroadcastInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Ip       string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port     int32  `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Protocal string `protobuf:"bytes,4,opt,name=protocal,proto3" json:"protocal,omitempty"`
	Securl   []byte `protobuf:"bytes,5,opt,name=securl,proto3" json:"securl,omitempty"`
}

func (x *RoomBroadcastInfo) Reset() {
	*x = RoomBroadcastInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomBroadcastInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomBroadcastInfo) ProtoMessage() {}

func (x *RoomBroadcastInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomBroadcastInfo.ProtoReflect.Descriptor instead.
func (*RoomBroadcastInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6}
}

func (x *RoomBroadcastInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RoomBroadcastInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RoomBroadcastInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RoomBroadcastInfo) GetProtocal() string {
	if x != nil {
		return x.Protocal
	}
	return ""
}

func (x *RoomBroadcastInfo) GetSecurl() []byte {
	if x != nil {
		return x.Securl
	}
	return nil
}

type RoomUpdateCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string                       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Side       RoomUpdateCardReq_PlayerSide `protobuf:"varint,2,opt,name=side,proto3,enum=ULZProto.RoomUpdateCardReq_PlayerSide" json:"side,omitempty"`
	CharcardId int32                        `protobuf:"varint,3,opt,name=charcard_id,json=charcardId,proto3" json:"charcard_id,omitempty"`
	CardsetId  int32                        `protobuf:"varint,4,opt,name=cardset_id,json=cardsetId,proto3" json:"cardset_id,omitempty"`
	Level      int32                        `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *RoomUpdateCardReq) Reset() {
	*x = RoomUpdateCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomUpdateCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomUpdateCardReq) ProtoMessage() {}

func (x *RoomUpdateCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomUpdateCardReq.ProtoReflect.Descriptor instead.
func (*RoomUpdateCardReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7}
}

func (x *RoomUpdateCardReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RoomUpdateCardReq) GetSide() RoomUpdateCardReq_PlayerSide {
	if x != nil {
		return x.Side
	}
	return RoomUpdateCardReq_HOST
}

func (x *RoomUpdateCardReq) GetCharcardId() int32 {
	if x != nil {
		return x.CharcardId
	}
	return 0
}

func (x *RoomUpdateCardReq) GetCardsetId() int32 {
	if x != nil {
		return x.CardsetId
	}
	return 0
}

func (x *RoomUpdateCardReq) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x67, 0x0a, 0x0e, 0x52, 0x6d, 0x43,
	0x68, 0x61, 0x72, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x72, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x73, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x0a, 0x52, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x76, 0x61, 0x74, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x76, 0x61, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x22, 0xd4, 0x05, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x64, 0x75, 0x65, 0x6c, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x64, 0x75, 0x65, 0x6c, 0x65,
	0x72, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x75, 0x72, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63,
	0x6f, 0x73, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x61, 0x78, 0x12, 0x24, 0x0a, 0x0e, 0x63,
	0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x69,
	0x6e, 0x12, 0x47, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x72, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6d, 0x43, 0x68, 0x61, 0x72,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x63, 0x68, 0x61, 0x72, 0x43, 0x61,
	0x72, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x61, 0x78, 0x12, 0x47, 0x0a, 0x13, 0x63, 0x68,
	0x61, 0x72, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6d, 0x69,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x10, 0x63, 0x68, 0x61, 0x72, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x4d, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x6e, 0x76, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72,
	0x43, 0x61, 0x72, 0x64, 0x4e, 0x76, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x6f, 0x73, 0x74, 0x5f,
	0x63, 0x68, 0x61, 0x72, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x68, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x63, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x68, 0x6f, 0x73, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x28, 0x0a, 0x10, 0x64, 0x75, 0x65, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x75, 0x65, 0x6c,
	0x43, 0x68, 0x61, 0x72, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x75,
	0x65, 0x6c, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x75, 0x65, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x75, 0x65, 0x6c, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x75, 0x65, 0x6c,
	0x43, 0x61, 0x72, 0x64, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xaa, 0x02, 0x0a, 0x07, 0x52, 0x6f,
	0x6f, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07,
	0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5d, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x43, 0x4b,
	0x45, 0x52, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f,
	0x57, 0x41, 0x52, 0x4e, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d,
	0x5f, 0x45, 0x52, 0x52, 0x10, 0x04, 0x22, 0x7a, 0x0a, 0x07, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x73, 0x5f, 0x64, 0x75, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x44, 0x75, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0xe9, 0x02, 0x0a, 0x0d, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x63, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d,
	0x61, 0x78, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x73, 0x74,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x76, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x72, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x76, 0x6e, 0x12, 0x47, 0x0a, 0x13,
	0x63, 0x68, 0x61, 0x72, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f,
	0x6d, 0x61, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x55, 0x4c, 0x5a, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x10, 0x63, 0x68, 0x61, 0x72, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x4d, 0x61, 0x78, 0x12, 0x47, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x72, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6d,
	0x43, 0x68, 0x61, 0x72, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x63, 0x68,
	0x61, 0x72, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x69, 0x6e, 0x22, 0x7d,
	0x0a, 0x11, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x75, 0x72, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x63, 0x75, 0x72, 0x6c, 0x22, 0xdb, 0x01,
	0x0a, 0x11, 0x52, 0x6f, 0x6f, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x63, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x22, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x4f, 0x53, 0x54, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x44, 0x55, 0x45, 0x4c, 0x45, 0x52, 0x10, 0x01, 0x2a, 0x50, 0x0a, 0x0a, 0x52,
	0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x4e, 0x5f,
	0x49, 0x4e, 0x49, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x4e, 0x5f, 0x57, 0x41, 0x49,
	0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x0e, 0x0a,
	0x0a, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x52, 0x4f, 0x59, 0x10, 0x04, 0x42, 0x44, 0x0a,
	0x19, 0x69, 0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x4c, 0x5a, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x42, 0x08, 0x55, 0x4c, 0x5a, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x50, 0x01, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa,
	0x02, 0x11, 0x55, 0x4c, 0x5a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4d, 0x6f, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_message_proto_goTypes = []interface{}{
	(RoomStatus)(0),                   // 0: ULZProto.RoomStatus
	(RoomMsg_MsgType)(0),              // 1: ULZProto.RoomMsg.MsgType
	(RoomUpdateCardReq_PlayerSide)(0), // 2: ULZProto.RoomUpdateCardReq.PlayerSide
	(*RmCharCardInfo)(nil),            // 3: ULZProto.RmCharCardInfo
	(*RmUserInfo)(nil),                // 4: ULZProto.RmUserInfo
	(*Room)(nil),                      // 5: ULZProto.Room
	(*RoomMsg)(nil),                   // 6: ULZProto.RoomMsg
	(*RoomReq)(nil),                   // 7: ULZProto.RoomReq
	(*RoomCreateReq)(nil),             // 8: ULZProto.RoomCreateReq
	(*RoomBroadcastInfo)(nil),         // 9: ULZProto.RoomBroadcastInfo
	(*RoomUpdateCardReq)(nil),         // 10: ULZProto.RoomUpdateCardReq
}
var file_message_proto_depIdxs = []int32{
	4,  // 0: ULZProto.Room.host:type_name -> ULZProto.RmUserInfo
	4,  // 1: ULZProto.Room.dueler:type_name -> ULZProto.RmUserInfo
	0,  // 2: ULZProto.Room.status:type_name -> ULZProto.RoomStatus
	3,  // 3: ULZProto.Room.char_card_limit_max:type_name -> ULZProto.RmCharCardInfo
	3,  // 4: ULZProto.Room.char_card_limit_min:type_name -> ULZProto.RmCharCardInfo
	1,  // 5: ULZProto.RoomMsg.msg_type:type_name -> ULZProto.RoomMsg.MsgType
	4,  // 6: ULZProto.RoomReq.user:type_name -> ULZProto.RmUserInfo
	4,  // 7: ULZProto.RoomCreateReq.host:type_name -> ULZProto.RmUserInfo
	3,  // 8: ULZProto.RoomCreateReq.char_card_limit_max:type_name -> ULZProto.RmCharCardInfo
	3,  // 9: ULZProto.RoomCreateReq.char_card_limit_min:type_name -> ULZProto.RmCharCardInfo
	2,  // 10: ULZProto.RoomUpdateCardReq.side:type_name -> ULZProto.RoomUpdateCardReq.PlayerSide
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmCharCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomBroadcastInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomUpdateCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		EnumInfos:         file_message_proto_enumTypes,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
